<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

        <groupId>org.jboss.teiid.quickstart</groupId>
        <version>2.1.0.redhat-62-7</version>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>demo-webapp</artifactId>
	<packaging>war</packaging>

	<name>Hibernate Quickstart Using Teiid to Federate Data Sources</name>
	<description>hibernate4: This quickstart demonstrates how hibernate can federate data through a single relationally mapped object.</description>

         <properties>
                <!-- Explicitly declaring the source encoding eliminates the following 
                                             message: -->
                <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
                                             resources, i.e. build is platform dependent! -->
                <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                <version.org.scannotation>1.0.3.redhat-4</version.org.scannotation>

            <illegaltransitivereportonly>true</illegaltransitivereportonly>

                <version.org.jboss.integration-platform>6.0.0.CR25-redhat-2</version.org.jboss.integration-platform>
                <version.commons-httpclient>3.1</version.commons-httpclient>

                <version.teiid>8.7.1.6_2-redhat-6</version.teiid>

        <version.javax.annotation>1.0.1.Final-redhat-3</version.javax.annotation>
        <version.jboss.as.plugin>7.5.Final</version.jboss.as.plugin>
        <version.net.jcip>1.0.0.redhat-7</version.net.jcip>
        <version.org.codehaus.mojo.exec.plugin>1.2.1</version.org.codehaus.mojo.exec.plugin>
        <version.org.hibernate.search>4.6.0.Final-redhat-2</version.org.hibernate.search>
        <version.org.infinispan>6.2.0.Final-redhat-4</version.org.infinispan>
        <version.org.jboss.teiid.quickstart>2.1.0.redhat-62-7</version.org.jboss.teiid.quickstart> <!-- 6.0.2.Final -->

        <version.org.jboss.bom.jboss-javaee-6.0-with-tools>6.4.3.GA</version.org.jboss.bom.jboss-javaee-6.0-with-tools>

                <jdg.slot>jdg-6.6</jdg.slot>

                <version.javax.enterprise>1.0.0.SP4-redhat-5</version.javax.enterprise>

                <version.org.mockito>1.9.5</version.org.mockito>

                <version.junit>4.11</version.junit>
        </properties>

	<dependencies>

		<!-- First declare the APIs we depend on and need for compilation. All 
			of them are provided by JBoss AS 7 -->

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
            <version>${version.javax.enterprise}</version>
        </dependency>
        <!-- Import the Common Annotations API (JSR-250), using 'provided' scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <scope>provided</scope>
             <version>${version.javax.annotation}</version>
        </dependency>     	

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
                        <version>1.0.1.Final-redhat-3</version>
		</dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
                        <version>1.0.2.Final-redhat-3</version>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
                        <version>4.3.2.Final-redhat-2</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--Import dependencies to hibernate packages(eg. hibernate-core) depending 
			on features you want to use like Hibernate Session used in the quickstart -->
		<!--please note that scope is provided as these jars are shipped with as7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>provided</scope>
                        <version>4.2.20.Final-redhat-1</version>
		</dependency>

		<!-- Now we declare any tools needed -->

		<!-- Needed for running tests (you may also use TestNG) -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
                        <version>${version.junit}</version>
		</dependency>
                <dependency>
        <groupId>org.jboss.teiid</groupId>
        <artifactId>teiid-hibernate-dialect</artifactId>
        <version>8.7.1.6_2-redhat-6</version>
      </dependency>
 
	</dependencies>

	<build>
		<!-- Maven will append the version to the finalName (which is the name 
			given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<plugins>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- org.jboss.teiid export, -->
				</configuration>
			</plugin>
			<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
			<!-- To use, set the JBOSS_HOME environment variable and run: mvn package 
				jboss-as:deploy -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.as.plugin}</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
